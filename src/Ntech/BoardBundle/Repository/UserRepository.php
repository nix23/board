<?php

namespace Ntech\BoardBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
	public function getWithFollowers($userId = null)
	{
		$query = $this->getEntityManager()->createQuery(
			'SELECT u, f FROM NtechBoardBundle:User u LEFT JOIN u.myFollowers f
			 WHERE u.id = :userId'
		)->setParameter('userId', $userId);

		return $query->getSingleResult();
	}

	public function getWithFollowedUsers($userId = null)
	{
		$query = $this->getEntityManager()->createQuery(
			"SELECT u, f FROM NtechBoardBundle:User u LEFT JOIN u.followedByMe f
			 WHERE u.id = :userId"
		)->setParameter('userId', $userId);

		return $query->getSingleResult();
	}

	public function findMessagesCountByUserIds($userIds = array(),
															 $messagesType = "new")
	{
		if(!is_array($userIds) || empty($userIds))
			throw new \Exception("Wrong \$userIds passed to findMessagesCountByUserIds");

		switch($messagesType)
		{
			case "new":
				$messagesConditions  = "";
				$messagesConditions .= "AND m.replyToMessage is NULL ";
				$messagesConditions .= "AND m.originalMessage is NULL";
				break;

			case "replies":
				$messagesConditions = "AND m.replyToMessage is NOT NULL";
				break;

			case "reposts":
				$messagesConditions = "AND m.originalMessage is NOT NULL";
				break;

			default:
				throw new \Exception("Unknown messages type");
				break;
		}

		for($i = 0; $i < count($userIds); $i++)
			$userIds[$i] = (int)$userIds[$i];

		$userIdsString = implode(", ", $userIds);

		$query = $this->getEntityManager()->createQuery(
			"SELECT u.id, COUNT(m.id) AS messagesCount FROM NtechBoardBundle:User u JOIN u.messages m
			 WHERE u.id IN ($userIdsString) {$messagesConditions} GROUP BY u.id"
		);

		return $query->getResult();
	}
}
